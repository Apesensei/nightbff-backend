name: Build and Push Backend to GHCR

on:
  push:
    branches:
      - 'integration/**'
  workflow_dispatch: # Allows manual triggering

concurrency:
  group: build-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # Required for cosign

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Backend Environment
        uses: ./.github/actions/setup-backend
        with:
          install-deps: 'false'

      # Set up Buildx builder so cache export works on GH hosted runners
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.2.4'

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/Apesensei/nightbff-backend
          tags: |
            # Create a tag for the integration branch based on the short commit SHA
            type=sha,prefix=int-,format=short

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          provenance: true
          sbom: true
          build-args: |
            SERVICE=monolith
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign container image with cosign
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          echo "Signing image with tags: $TAGS"
          echo "Digest: $DIGEST" 
          cosign sign --yes "${TAGS}@${DIGEST}"

      - name: Generate and upload SBOM
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "Generating SBOM for: $TAGS"
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/syft:latest "${TAGS}" -o spdx-json > sbom.spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.sha }}
          path: sbom.spdx.json
          retention-days: 30 